# Text

paragraphs
.
first

second
.
<p>first</p>
<p>second</p>
.

continuations
.
first
second
.
<p>first<br>second</p>
.

ignore extra empty lines
.
first




second
.
<p>first</p>
<p>second</p>
.

inline rendering
.
one *one* two **two**
.
<p>one <em>one</em> two <strong>two</strong></p>
.

# Headings

heading
.
# heading
.
<h2>heading</h2>
.

subheading
.
## heading
.
<h3>heading</h3>
.

extra hashes don't create a heading
.
### non-heading
.
<p>### non-heading</p>
.

multiple lines are joined
.
# one
# two
.
<h2>one two</h2>
.

inline rendering
.
# *heading*
.
<h2><em>heading</em></h2>
.

inline rendering on a subheading
.
## *heading*
.
<h3><em>heading</em></h3>
.

inline rendering works across lines
.
# *one
# two*
.
<h2><em>one two</em></h2>
.

# Blockquotes

quote
.
> my
>quote
.
<blockquote>
<p>my quote</p>
</blockquote>
.

quote with multiple paragraphs
.
> my
>
> quote
.
<blockquote>
<p>my</p>
<p>quote</p>
</blockquote>
.

more crocs make nested quotes
.
> how are you?
>> good
> okay
.
<blockquote>
<p>how are you?</p>
<blockquote>
<p>good</p>
</blockquote>
<p>okay</p>
</blockquote>
.

nesting can decrease multiple levels
.
> one
>> two
>>> three
> back to one
.
<blockquote>
<p>one</p>
<blockquote>
<p>two</p>
<blockquote>
<p>three</p>
</blockquote>
</blockquote>
<p>back to one</p>
</blockquote>
.


leading empty lines are ignored
.
>
> 
> quote
.
<blockquote>
<p>quote</p>
</blockquote>
.

trailing empty lines are ignored
.
> quote
> 
>
.
<blockquote>
<p>quote</p>
</blockquote>
.

empty lines in the middle are merged
.
> one
> 
>
> 
>two
.
<blockquote>
<p>one</p>
<p>two</p>
</blockquote>
.

inline rendering
.
> *one*
> *two*
>
> *three*
.
<blockquote>
<p><em>one</em> <em>two</em></p>
<p><em>three</em></p>
</blockquote>
.

inline rendering works across lines
.
> *one
> two*
.
<blockquote>
<p><em>one two</em></p>
</blockquote>
.

# Lists

unordered list
.
* one
* two
* three
.
<ul>
<li>one</li>
<li>two</li>
<li>three</li>
</ul>
.

extra space after the list marker is okay
.
* one
*  two
*     three
.
<ul>
<li>one</li>
<li>two</li>
<li>three</li>
</ul>
.

dashes work
.
- one
- two
- three
.
<ul>
<li>one</li>
<li>two</li>
<li>three</li>
</ul>
.

lists items can have a single empty line between them, but two empty lines
ends the list
.
* one

* two

* three


* four
.
<ul>
<li>one</li>
<li>two</li>
<li>three</li>
</ul>
<ul>
<li>four</li>
</ul>
.

numbers followed by a dot or ")" create an ordered list
.
1. one
2. two
3. three
.
<ol>
<li>one</li>
<li>two</li>
<li>three</li>
</ol>
.

.
1) one
2) two
3) three
.
<ol>
<li>one</li>
<li>two</li>
<li>three</li>
</ol>
.


any number works for the ordered list
.
1. one
1. two
1. three
.
<ol>
<li>one</li>
<li>two</li>
<li>three</li>
</ol>
.

lists can be nested
.
* one
*  two
  * two a
  * two b
  * two
    c
* three
.
<ul>
<li>one</li>
<li>two
<ul>
<li>two a</li>
<li>two b</li>
<li>two c</li>
</ul>
</li>
<li>three</li>
</ul>
.

lists are continued by lines without a list item
.
* one
two
three
* four
.
<ul>
<li>one two three</li>
<li>four</li>
</ul>
.

An empty line followed by a paragraph ends the list
.
* one
* two

three
.
<ul>
<li>one</li>
<li>two</li>
</ul>
<p>three</p>
.

.
* one
  * two

three
.
<ul>
<li>one
<ul>
<li>two</li>
</ul>
</li>
</ul>
<p>three</p>
.

switching list type creates a new list
.
* one
* two
1. three
.
<ul>
<li>one</li>
<li>two</li>
</ul>
<ol>
<li>three</li>
</ol>
.

.
* one
* two
- three
.
<ul>
<li>one</li>
<li>two</li>
</ul>
<ul>
<li>three</li>
</ul>
.

.
1. one
2. two
3) three
.
<ol>
<li>one</li>
<li>two</li>
</ol>
<ol>
<li>three</li>
</ol>
.

nested lists can use a different type
.
* one
* two
  1. two a
  2. two b
* three
.
<ul>
<li>one</li>
<li>two
<ol>
<li>two a</li>
<li>two b</li>
</ol>
</li>
<li>three</li>
</ul>
.

inline rendering
.
* **one**
* *two*
.
<ul>
<li><strong>one</strong></li>
<li><em>two</em></li>
</ul>
.

inline renderer works across lines
.
* *one
  two*
.
<ul>
<li><em>one two</em></li>
</ul>
.

Italics are not mistaken for a list
.
*hello*
.
<p><em>hello</em></p>
.

Bold is not mistaken for a list
.
**hello**
.
<p><strong>hello</strong></p>
.

# Tables

Pipes create tables
.
First Header  | Second Header
------------- | -------------
data1         | data2
data3         | data4
.
<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>
<tbody>
<tr>
<td>data1</td>
<td>data2</td>
</tr>
<tr>
<td>data3</td>
<td>data4</td>
</tr>
</tbody>
</table>
.

Pipes don't need to line up
.
First Header  | Second Header
------------- | -------------
data1 | data2
data3  | data4
.
<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>
<tbody>
<tr>
<td>data1</td>
<td>data2</td>
</tr>
<tr>
<td>data3</td>
<td>data4</td>
</tr>
</tbody>
</table>
.

Extra Pipes are allowed on the outside
.
|First Header  | Second Header|
|------------- | -------------|
|data1         | data2        |
|data3         | data4        |
.
<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>
<tbody>
<tr>
<td>data1</td>
<td>data2</td>
</tr>
<tr>
<td>data3</td>
<td>data4</td>
</tr>
</tbody>
</table>
.

# footnoots

footnote
.
Bob likes apples.[footnote: Apples and oranges p.9]  Jane likes oranges.[footnote: ibid p.10]
.
<p>Bob likes apples.<sup id="citation-1" class="citation"><a href="#footnote-1">[1]</a></sup>  Jane likes oranges.<sup id="citation-2" class="citation"><a href="#footnote-2">[2]</a></sup></p>
<div class="footnotes">
<h3>Footnotes</h3>
<ol>
<li id="footnote-1"><b><a href="#citation-1">^</a></b> Apples and oranges p.9</li>
<li id="footnote-2"><b><a href="#citation-2">^</a></b> ibid p.10</li>
</ol>
</div>
.

# Images

basic image
.
#image-1-full
.
<figure class="full">
<img src="/user-media/full/1.png">
</figure>
.

other style
.
#image-1-left
.
<figure class="left">
<img src="/user-media/small/1.png">
</figure>
.

captions
.
#image-1-left
#caption Caption Text
.
<figure class="left">
<img src="/user-media/small/1.png">
<figcaption>Caption Text</figcaption>
</figure>
.

invalid id
.
#image-1000-full
.
.

caption without image
.
#caption Caption
.
<p>Caption</p>
.

# Videos

HTML5 video
.
[http://example.com/1.mp4]
.
<video id="ce9804b6e0614cdd046189d6f16f4431" class="video-js vjs-default-skin" controls>
  <source src="http://example.com/1.mp4" />
</video>
.

Youtube Video
.
[http://www.youtube.com/?v=123]
.
<div class="video-iframe-wrapper">
  <iframe src="http://www.youtube.com/embed/123" frameborder="0" allowfullscreen></iframe>
</div>
.

Youtu.be Video
.
[http://www.youtu.be/123]
.
<div class="video-iframe-wrapper">
  <iframe src="http://www.youtube.com/embed/123" frameborder="0" allowfullscreen></iframe>
</div>
.

Vimeo Video
.
[https://vimeo.com/channels/staffpicks/123]
.
<div class="video-iframe-wrapper">
  <iframe src="//player.vimeo.com/video/123" frameborder="0" allowfullscreen></iframe>
</div>
.

Dailymotion Video
.
[http://www.dailymotion.com/video/video-id]
.
<div class="video-iframe-wrapper">
  <iframe src="//www.dailymotion.com/embed/video/video-id" frameborder="0" allowfullscreen></iframe>
</div>
.
